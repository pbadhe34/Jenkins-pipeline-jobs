##Build the maven project 
pipeline {
    agent any

    tools {
        // Install the Maven version configured as "M3" and add it to the path.
        maven "maven3.5"
    }

    stages {
        stage('Build') {
            steps {
                // Get some code from a GitHub repository
                //git 'https://github.com/Hp-User/MavenWebApp.git'
                //git clone --branch <branchname> <remoterepo-url>-
                //clone the main branch
                
                sh "rm -r -f ./MavenWebApp"
                
                git url: 'git://github.com/Hp-User/MavenWebApp.git', branch: 'main'
               
               // sh "git clone --branch main https://github.com/Hp-User/MavenWebApp.git"
                
               // sh "cd ./MavenWebApp"

               //  sh "pwd"
               
                // Run Maven goals on a Unix agent.
                // sh "mvn -f ./MavenWebApp/pom.xml -Dmaven.test.failure.ignore=true clean package"

               sh "mvn  -Dmaven.test.failure.ignore=true clean package"

                // To run Maven on a Windows agent, use
                // bat "mvn -Dmaven.test.failure.ignore=true clean package"
            }

            post {
                // If Maven was able to run the tests, even if some of the test
                // failed, record the test results and archive the jar file.
                success {
                    junit '**/target/surefire-reports/TEST-*.xml'
                    //archiveArtifacts 'target/*.jar'
                }
            }
        }
    }
}
-----------------
 ##Read Maven version
pipeline {
    agent any
    tools {
        maven 'maven3.5' 
    }
    stages {
        stage('Maven Version Run') {
            steps {
                sh 'mvn --version'
            }
        }
    }
}--------------------
